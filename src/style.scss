@import "variables.scss";

@mixin center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin overlay {
  content: "";
  width: 100%;
  height: 100%;
  @include center;
}

@mixin card {
  background-color: $card;
  padding: $medium;
  border-radius: $xSmall;
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: black;
  font-family: Arial, Helvetica, sans-serif;
  padding: $large;
  color: black;
}

h1,
h2,
h3,
h4 {
  //font-family: consolas, sans-serif;
  font-family: monospace;
  font-size: 170%;
}
h2 {
  margin-bottom: $medium;
}

h2,
h3 {
  padding-bottom: $small;
}

h3 {
  margin: $largish 0 $medium 0;
}

h3,
h4 {
  font-size: 1.1rem;
}

h4 {
  margin: $largish 0 $small 0;
}

.App {
  display: grid;
  grid-template-rows: auto;
  gap: $large;
}

button {
  /*  background: linear-gradient(
    to right bottom,
    rgba(255, 255, 255, 0.5),
    rgba(255, 255, 255, 0.8)
  );
  border: none; */

  border-radius: $small;
  color: black;
  padding: $small;
  font-size: 1.1rem;

  border: 0.1563rem solid black;
  background-color: transparent;
  font-weight: bold;

  transition: 200ms ease-in-out;

  &:hover {
    background-color: rgba(0, 0, 0, 0.3);

    cursor: pointer;
  }
}

.container {
  position: relative;
  background-color: rgba(255, 255, 255, 0.2);
  width: 100%;
  margin: auto;
  border-radius: $small;
  padding: $large;

  &::before {
    @include overlay;
    border-radius: $xSmall;
    z-index: -1;
    filter: blur($small);
    padding: $xSmall;
  }
}

.header {
  &::before {
    background: linear-gradient(
      to right bottom,
      darken($green, 20%),
      darken($greenish, 20%)
    );
  }
  text-align: center;

  .title {
    font-size: 3rem;
    margin-bottom: $small;
  }

  h2 {
    margin: 0;
  }
}

.game {
  .warning {
    position: relative;
    margin-bottom: $largish;
  }

  .warning::after {
    content: "Note: the game is not currently fully interactable";
    background-color: black;
    width: 100%;
    z-index: 3;
    color: lighten($orange, 20%);
    padding: $xSmall $large;
    text-align: center;
    letter-spacing: 0.0625rem;
    font-family: monospace;
    @include center;
  }

  .game-grid {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: $medium;
  }

  &::before {
    background: linear-gradient(
      to right bottom,
      darken($orange, 10%),
      darken($orangeish, 10%)
    );
  }

  h2 {
    //border-bottom: 0.1563rem solid black;
    margin-bottom: 0;
  }

  .number-group,
  .colour-group,
  .hand {
    @include card;
    display: grid;
    grid-column: 1fr;
    grid-row: auto;
    gap: $small;
  }

  .number-group,
  .colour-group {
    .card-container {
      justify-content: left;
      margin-bottom: $small;
    }
  }
  button {
    align-self: end;
  }
  .hand {
    grid-column: span 2;

    button {
      align-self: stretch;
    }
  }
}

.card-container {
  display: flex;
  flex-wrap: wrap;
  gap: $xSmall;
  justify-content: center;

  .card {
    background: linear-gradient(to right bottom, rgb(60, 60, 60), black);
    width: 4.0625rem;
    height: 5rem;
    display: flex;
    justify-content: center;
    align-items: center;
    font-size: xx-large;
    font-weight: bold;
    border-radius: $small;
    border: 0.125rem solid black;
    border-style: outset;
    transition: 200ms ease-in-out;
  }
  .selected {
    border-color: rgb(255, 255, 255);
    box-shadow: 0 0 $xSmall $xSmall rgba(255, 255, 255, 0.5);
    transform: scale(1.2);
  }

  .card:hover {
    transform: scale(1.2);
  }
}

.purple {
  color: $purple;
}
.orange {
  color: $orange;
}
.green {
  color: $green;
}
.white {
  color: white;
}

.rules {
  &::before {
    background: linear-gradient(
      to right bottom,
      darken($purple, 5%),
      darken($purplish, 5%)
    );
  }

  h3 {
    border-bottom: 0.1563rem solid black;
  }

  span {
    background-color: black;
    padding: 0 $xSmall;
    border-radius: $xSmall;
  }

  .card-section .rule-card {
    &:not(:last-child) {
      margin-bottom: $medium;
    }
  }

  .rule-card-container {
    display: flex;
    flex-wrap: wrap;
    gap: $medium;
    align-items: stretch;

    .rule-card {
      flex: 1; //makes cards stretch
    }
  }
  .illustrated p {
    margin-bottom: $medium;
  }
  .rule-card {
    @include card;
    font-size: 1.1rem;

    .or {
      text-align: center;
      font-weight: bold;
      margin: $small 0;
    }

    .card-container-group {
      display: grid;
      grid-template-rows: 2;
      gap: $medium;

      .bad,
      .good {
        position: relative;
      }

      .bad::before,
      .good::before {
        @include overlay;
        z-index: 2;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: 8rem;
        opacity: 0.6;
      }

      .bad::before {
        content: "X";
        color: $orangeish;
      }

      .good::before {
        content: "\2714"; //hex code for checkmark, is inserted differently to html
        color: $green;
      }
    }
  }
}

//chrome, safari, edge
body::-webkit-scrollbar {
  width: $small; /* width of the entire scrollbar */
}

body::-webkit-scrollbar-track {
  background: $card; /* color of the tracking area */
}

body::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, 0.3); /* color of the scroll thumb */
  border-radius: $small; /* roundness of the scroll thumb */
  border: 0 solid; /* creates padding around scroll thumb */
}

//firefox
body {
  scrollbar-width: thin; /* "auto" or "thin" */
  scrollbar-color: $card rgba(255, 255, 255, 0.3); /* scroll thumb and track */
}
