@charset "UTF-8";
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: black;
  font-family: Arial, Helvetica, sans-serif;
  padding: 3.125rem;
  color: black;
}

h1,
h2,
h3,
h4 {
  font-family: monospace;
  font-size: 170%;
}

h2 {
  margin-bottom: 1.25rem;
}

h2,
h3 {
  padding-bottom: 0.625rem;
}

h3 {
  margin: 2.1875rem 0 1.25rem 0;
}

h3,
h4 {
  font-size: 1.1rem;
}

h4 {
  margin: 2.1875rem 0 0.625rem 0;
}

.App {
  display: grid;
  grid-template-rows: auto;
  gap: 3.125rem;
}

button {
  /*  background: linear-gradient(
    to right bottom,
    rgba(255, 255, 255, 0.5),
    rgba(255, 255, 255, 0.8)
  );
  border: none; */
  border-radius: 0.625rem;
  color: black;
  padding: 0.625rem;
  font-size: 1.1rem;
  border: 0.1563rem solid black;
  background-color: transparent;
  font-weight: bold;
  transition: 200ms ease-in-out;
}
button:hover {
  background-color: rgba(0, 0, 0, 0.3);
  cursor: pointer;
}

.container {
  position: relative;
  background-color: rgba(255, 255, 255, 0.2);
  width: 100%;
  margin: auto;
  border-radius: 0.625rem;
  padding: 3.125rem;
}
.container::before {
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  border-radius: 0.3125rem;
  z-index: -1;
  filter: blur(0.625rem);
  padding: 0.3125rem;
}

.header {
  text-align: center;
}
.header::before {
  background: linear-gradient(to right bottom, #439b00, #cca000);
}
.header .title {
  font-size: 3rem;
  margin-bottom: 0.625rem;
}
.header h2 {
  margin: 0;
}

.game .warning {
  position: relative;
  margin-bottom: 2.1875rem;
}
.game .warning::after {
  content: "Note: the game is not currently fully interactable";
  background-color: black;
  width: 100%;
  z-index: 3;
  color: #ffc966;
  padding: 0.3125rem 3.125rem;
  text-align: center;
  letter-spacing: 0.0625rem;
  font-family: monospace;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
.game .game-grid {
  display: grid;
  grid-template-columns: 1fr 1fr;
  gap: 1.25rem;
}
.game::before {
  background: linear-gradient(to right bottom, #cc8400, #cc2200);
}
.game h2 {
  margin-bottom: 0;
}
.game .number-group,
.game .colour-group,
.game .hand {
  background-color: rgba(255, 255, 255, 0.15);
  padding: 1.25rem;
  border-radius: 0.3125rem;
  display: grid;
  grid-column: 1fr;
  grid-row: auto;
  gap: 0.625rem;
}
.game .number-group .card-container,
.game .colour-group .card-container {
  justify-content: left;
  margin-bottom: 0.625rem;
}
.game button {
  align-self: end;
}
.game .hand {
  grid-column: span 2;
}
.game .hand button {
  align-self: stretch;
}

.card-container {
  display: flex;
  flex-wrap: wrap;
  gap: 0.3125rem;
  justify-content: center;
}
.card-container .card {
  background: linear-gradient(to right bottom, rgb(60, 60, 60), black);
  width: 4.0625rem;
  height: 5rem;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: xx-large;
  font-weight: bold;
  border-radius: 0.625rem;
  border: 0.125rem solid black;
  border-style: outset;
  transition: 200ms ease-in-out;
}
.card-container .selected {
  border-color: rgb(255, 255, 255);
  box-shadow: 0 0 0.3125rem 0.3125rem rgba(255, 255, 255, 0.5);
  transform: scale(1.2);
}
.card-container .card:hover {
  transform: scale(1.2);
}

.purple {
  color: rgb(194, 80, 255);
}

.orange {
  color: orange;
}

.green {
  color: rgb(111, 255, 2);
}

.white {
  color: white;
}

.rules::before {
  background: linear-gradient(to right bottom, #b937ff, #373dff);
}
.rules h3 {
  border-bottom: 0.1563rem solid black;
}
.rules span {
  background-color: black;
  padding: 0 0.3125rem;
  border-radius: 0.3125rem;
}
.rules .card-section .rule-card:not(:last-child) {
  margin-bottom: 1.25rem;
}
.rules .rule-card-container {
  display: flex;
  flex-wrap: wrap;
  gap: 1.25rem;
  align-items: stretch;
}
.rules .rule-card-container .rule-card {
  flex: 1;
}
.rules .illustrated p {
  margin-bottom: 1.25rem;
}
.rules .rule-card {
  background-color: rgba(255, 255, 255, 0.15);
  padding: 1.25rem;
  border-radius: 0.3125rem;
  font-size: 1.1rem;
}
.rules .rule-card .or {
  text-align: center;
  font-weight: bold;
  margin: 0.625rem 0;
}
.rules .rule-card .card-container-group {
  display: grid;
  grid-template-rows: 2;
  gap: 1.25rem;
}
.rules .rule-card .card-container-group .bad,
.rules .rule-card .card-container-group .good {
  position: relative;
}
.rules .rule-card .card-container-group .bad::before,
.rules .rule-card .card-container-group .good::before {
  content: "";
  width: 100%;
  height: 100%;
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 2;
  display: flex;
  justify-content: center;
  align-items: center;
  font-size: 8rem;
  opacity: 0.6;
}
.rules .rule-card .card-container-group .bad::before {
  content: "X";
  color: rgb(255, 42, 0);
}
.rules .rule-card .card-container-group .good::before {
  content: "âœ”";
  color: rgb(111, 255, 2);
}

body::-webkit-scrollbar {
  width: 0.625rem; /* width of the entire scrollbar */
}

body::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.15); /* color of the tracking area */
}

body::-webkit-scrollbar-thumb {
  background-color: rgba(255, 255, 255, 0.3); /* color of the scroll thumb */
  border-radius: 0.625rem; /* roundness of the scroll thumb */
  border: 0 solid; /* creates padding around scroll thumb */
}

body {
  scrollbar-width: thin; /* "auto" or "thin" */
  scrollbar-color: rgba(255, 255, 255, 0.15) rgba(255, 255, 255, 0.3); /* scroll thumb and track */
}/*# sourceMappingURL=style.css.map */